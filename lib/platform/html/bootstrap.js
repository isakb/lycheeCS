// Generated by CoffeeScript 1.6.3
(function() {
  (function(lychee, global) {
    return lychee.Preloader.prototype._load = function(url, type, _cache) {
      var img, link, script, that, xhr;
      that = this;
      if (type === "js") {
        this._pending[url] = true;
        script = document.createElement("script");
        script.async = true;
        script.onload = function() {
          that._pending[url] = false;
          _cache[url] = "";
          return that._progress(url, _cache);
        };
        script.src = url;
        return document.body.appendChild(script);
      } else if (type === "json") {
        this._pending[url] = true;
        xhr = new XMLHttpRequest();
        xhr.open("GET", url, true);
        xhr.setRequestHeader("Content-Type", "application/json; charset=utf8");
        xhr.onreadystatechange = function() {
          var data, e;
          if (xhr.readyState === 4) {
            data = null;
            try {
              data = JSON.parse(xhr.responseText);
            } catch (_error) {
              e = _error;
              console.warn("JSON file at " + url + " is invalid.");
            }
            that._pending[url] = false;
            _cache[url] = data;
            return that._progress(url, _cache);
          }
        };
        return xhr.send(null);
      } else if (type.match(/bmp|gif|jpg|jpeg|png/)) {
        this._pending[url] = true;
        img = new Image();
        img.onload = function() {
          that._pending[url] = false;
          _cache[url] = this;
          return that._progress(url, _cache);
        };
        return img.src = url;
      } else if (type === "css") {
        this._pending[url] = false;
        _cache[url] = "";
        link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = url;
        return document.head.appendChild(link);
      } else {
        this._pending[url] = true;
        xhr = new XMLHttpRequest();
        xhr.open("GET", url, true);
        xhr.onreadystatechange = function() {
          var data;
          if (xhr.readyState === 4 && xhr.status === 200 || xhr.status === 304) {
            data = xhr.responseText || xhr.responseXML || null;
            that._pending[url] = false;
            _cache[url] = data;
            return that._progress(url, _cache);
          }
        };
        return xhr.send(null);
      }
    };
  })(this.lychee, this);

}).call(this);
