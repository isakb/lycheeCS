// Generated by CoffeeScript 1.6.3
(function() {
  lychee.define("lychee.game.Main").requires(["lychee.game.Loop"]).includes(["lychee.Events"]).exports(function(lychee) {
    return lychee.game.Main = (function() {
      function Main(settings) {
        this.settings = lychee.extend({}, this.defaults, settings);
        this.states = {};
        this._state = null;
        lychee.Events.call(this, "game");
      }

      Main.prototype.defaults = {
        renderFps: 60,
        updateFps: 60,
        width: 1024,
        height: 768
      };

      Main.prototype.load = function() {
        return this.init();
      };

      Main.prototype.init = function() {
        this.loop = new lychee.game.Loop({
          render: this.settings.renderFps,
          update: this.settings.updateFps
        });
        this.loop.bind("update", this.updateLoop, this);
        return this.loop.bind("render", this.renderLoop, this);
      };

      Main.prototype.start = function() {
        return this.loop.start();
      };

      Main.prototype.stop = function() {
        return this.loop.stop();
      };

      Main.prototype.getState = function(id) {
        id = (typeof id === "string" ? id : null);
        return this.states[id] || this._state;
      };

      Main.prototype.setState = function(id, data) {
        var newState, oldState;
        data = data || null;
        oldState = this._state;
        newState = this.states[id] || null;
        if (newState === null) {
          return false;
        }
        if (oldState !== null) {
          oldState.leave && oldState.leave();
        }
        newState.enter && newState.enter(data);
        this._state = newState;
        return true;
      };

      Main.prototype.renderLoop = function(t, dt) {
        if (this._state !== null) {
          return this._state.render && this._state.render(t, dt);
        }
      };

      Main.prototype.updateLoop = function(t, dt) {
        if (this._state !== null) {
          return this._state.update && this._state.update(t, dt);
        }
      };

      return Main;

    })();
  });

}).call(this);
