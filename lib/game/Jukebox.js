// Generated by CoffeeScript 1.4.0
(function() {

  lychee.define("lychee.game.Jukebox").requires(["lychee.game.Loop"]).includes(["lychee.Jukebox"]).exports(function(lychee, global) {
    return lychee.game.Jukebox = (function() {

      function Jukebox(maxPoolSize, loop_) {
        lychee.Jukebox.call(this, maxPoolSize);
        this._clock = 0;
        this._effects = {};
        this._effectId = 0;
        if (loop_ instanceof lychee.game.Loop) {
          loop_.bind("update", this.update, this);
        }
      }

      Jukebox.prototype.update = function(clock, delta) {
        var e, effect, pos;
        for (e in this._effects) {
          effect = this._effects[e];
          if (effect === null) {
            continue;
          }
          if (effect.end <= this._clock) {
            if (effect.type === "fade-out") {
              this.stop(effect.id);
            }
            this._effects[e] = null;
            continue;
          }
          pos = (this._clock - effect.start) / (effect.end - effect.start);
          if (effect.type === "fade-in") {
            this.setVolume(effect.id, pos * effect.diff);
          } else {
            if (effect.type === "fade-out") {
              this.setVolume(effect.id, (1 - pos) * effect.diff);
            }
          }
        }
        return this._clock = clock;
      };

      Jukebox.prototype.fadeIn = function(id, duration, loop_, volume) {
        var effect;
        id = (typeof id === "string" ? id : null);
        duration = (typeof duration === "number" ? duration : 1000);
        loop_ = (loop_ === true ? true : false);
        volume = (typeof volume === "number" ? volume : 1);
        if (id !== null) {
          this.play(id, loop_);
          this.setVolume(id, 0);
          effect = {
            id: id,
            type: "fade-in",
            start: this._clock,
            end: this._clock + duration,
            diff: volume
          };
          return this._effects[++this._effectId] = effect;
        }
      };

      Jukebox.prototype.fadeOut = function(id, duration) {
        var currentVolume, effect;
        id = (typeof id === "string" ? id : null);
        duration = (typeof duration === "number" ? duration : 1000);
        if (id !== null) {
          currentVolume = this.getVolume(id);
          effect = {
            id: id,
            type: "fade-out",
            start: this._clock,
            end: this._clock + duration,
            diff: currentVolume
          };
          return this._effects[++this._effectId] = effect;
        }
      };

      Jukebox.prototype.removeEffects = function(id, type) {
        var e, found;
        id = (typeof id === "string" ? id : null);
        type = (typeof type === "string" ? type : null);
        found = false;
        for (e in this._effects) {
          if (this._effects[e] !== null && (id === null || this._effects[e].id === id) && (type === null || this._effects[e].type === type)) {
            this._effects[e] = null;
            found = true;
          }
        }
        return found;
      };

      return Jukebox;

    })();
  });

}).call(this);
