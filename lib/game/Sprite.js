// Generated by CoffeeScript 1.6.3
(function() {
  lychee.define("lychee.game.Sprite").includes(["lychee.game.Entity"]).exports(function(lychee, global) {
    return lychee.game.Sprite = (function() {
      function Sprite(data) {
        var settings;
        settings = lychee.extend({}, data);
        this._image = null;
        this._map = null;
        if (settings.image !== void 0) {
          this._image = settings.image;
        }
        if (Object.prototype.toString.call(settings.map) === "[object Object]") {
          this._map = settings.map;
        }
        delete settings.image;
        delete settings.map;
        lychee.game.Entity.call(this, settings);
        settings = null;
      }

      Sprite.prototype.setState = function(id) {
        var map, result;
        result = lychee.game.Entity.prototype.setState.call(this, id);
        if (result === true) {
          map = this._map[this.getState()] || null;
          if (map !== null) {
            if (map.width !== void 0 && typeof map.width === "number") {
              this.width = map.width;
            }
            if (map.height !== void 0 && typeof map.height === "number") {
              this.height = map.height;
            }
            if (map.radius !== void 0 && typeof map.radius === "number") {
              this.radius = map.radius;
            }
          }
        }
        return result;
      };

      Sprite.prototype.getImage = function() {
        return this._image;
      };

      Sprite.prototype.getMap = function() {
        var frame, state;
        state = this.getState();
        frame = this.getFrame();
        if ((this._map[state] != null) && (this._map[state].frames != null) && (this._map[state].frames[frame] != null)) {
          return this._map[state].frames[frame];
        }
        return null;
      };

      return Sprite;

    })();
  });

}).call(this);
