// Generated by CoffeeScript 1.6.3
(function() {
  lychee.define("Font").exports(function(lychee) {
    var Font;
    return Font = (function() {
      function Font(spriteOrImages, settings) {
        this.settings = lychee.extend({}, this.defaults, settings);
        if (this.settings.kerning > this.settings.spacing) {
          this.settings.kerning = this.settings.spacing;
        }
        this._cache = {};
        this._images = null;
        this._sprite = null;
        if (Object.prototype.toString.call(spriteOrImages) === "[object Array]") {
          this._images = spriteOrImages;
        } else {
          this._sprite = spriteOrImages;
        }
        this._init();
      }

      Font.prototype.defaults = {
        charset: " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~",
        baseline: 0,
        spacing: 0,
        kerning: 0,
        map: null
      };

      Font.prototype._init = function() {
        var test;
        if (this._images !== null) {
          return this._initImages();
        } else if (this._sprite !== null) {
          if (Object.prototype.toString.call(this.settings.map) === "[object Array]") {
            test = this.settings.map[0];
            if (Object.prototype.toString.call(test) === "[object Object]") {
              return this._initSpriteXY();
            } else {
              if (typeof test === "number") {
                return this._initSpriteX();
              }
            }
          }
        }
      };

      Font.prototype._initImages = function() {
        var c, chr, image, l, _results;
        c = 0;
        l = this.settings.charset.length;
        _results = [];
        while (c < l) {
          image = this._images[c] || null;
          if (image === null) {
            continue;
          }
          chr = {
            id: this.settings.charset[c],
            image: image,
            width: image.width,
            height: image.height,
            x: 0,
            y: 0
          };
          this._cache[chr.id] = chr;
          _results.push(c++);
        }
        return _results;
      };

      Font.prototype._initSpriteX = function() {
        var c, chr, l, offset, _results;
        offset = this.settings.spacing;
        c = 0;
        l = this.settings.charset.length;
        _results = [];
        while (c < l) {
          chr = {
            id: this.settings.charset[c],
            width: this.settings.map[c] + this.settings.spacing * 2,
            height: this._sprite.height,
            real: this.settings.map[c],
            x: offset - this.settings.spacing,
            y: 0
          };
          offset += chr.width;
          this._cache[chr.id] = chr;
          _results.push(c++);
        }
        return _results;
      };

      Font.prototype._initSpriteXY = function() {
        var c, chr, frame, l, _results;
        c = 0;
        l = this.settings.charset.length;
        _results = [];
        while (c < l) {
          frame = this.settings.map[c];
          chr = {
            id: this.settings.charset[c],
            width: frame.width + this.settings.spacing * 2,
            height: frame.height,
            real: frame.width,
            x: frame.x - this.settings.spacing,
            y: frame.y
          };
          this._cache[chr.id] = chr;
          _results.push(c++);
        }
        return _results;
      };

      Font.prototype.get = function(id) {
        if (this._cache[id] !== void 0) {
          return this._cache[id];
        }
        return null;
      };

      Font.prototype.getSettings = function() {
        return this.settings;
      };

      Font.prototype.getSprite = function() {
        return this._sprite;
      };

      return Font;

    })();
  });

}).call(this);
